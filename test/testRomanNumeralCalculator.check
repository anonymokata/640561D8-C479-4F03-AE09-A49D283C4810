#include "../src/romanNumeralCalculator.h"

#define SUMBUFFERLENGTH 64
char sumBuffer[SUMBUFFERLENGTH];

#test testAddXPlusXGivesXX
  size_t usedSumBufferSize = addRomanNumerals("X", "X", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "XX");

#test testAddIPlusXIIGivesXIII
  size_t usedSumBufferSize = addRomanNumerals("I", "XII", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "XIII");

#test testAddIPlusXGivesXI
  size_t usedSumBufferSize = addRomanNumerals("I", "X", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "XI");

#test testAddIPlusIXGivesX
  size_t usedSumBufferSize = addRomanNumerals("I", "IX", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "X");

#test testAddVIIPlusIIGivesIX
  size_t usedSumBufferSize = addRomanNumerals("VII", "II", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "IX");

#test testAddIIPlusVIGivesVIII
  size_t usedSumBufferSize = addRomanNumerals("II", "VI", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "VIII");

#test testAddVPlusIIIGivesIII
  size_t usedSumBufferSize = addRomanNumerals("III", "III", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "VI");

#test testAddIVPlusIGivesV
  size_t usedSumBufferSize = addRomanNumerals("IV", "I", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "V");

#test testAddIIPlusIIGivesIV
  size_t usedSumBufferSize = addRomanNumerals("II", "II", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "IV");

#test testAddIIPlusIGivesIII
  size_t usedSumBufferSize = addRomanNumerals("II", "I", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "III");

#test testAddIPlusIIGivesIII
  size_t usedSumBufferSize = addRomanNumerals("I", "II", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "III");

#test testAddIPlusIGivesII
  size_t usedSumBufferSize = addRomanNumerals("I", "I", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "II");
