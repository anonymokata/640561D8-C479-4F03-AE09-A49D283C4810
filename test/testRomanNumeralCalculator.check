#include "../src/romanNumeralCalculator.h"

#define SUMBUFFERLENGTH 64
char sumBuffer[SUMBUFFERLENGTH];

#test testAddLPlusLEqualsC
  size_t usedSumBufferSize = addRomanNumerals("L", "L", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "C");

#test testAddXLPlusLVIEqualsXCVI
  size_t usedSumBufferSize = addRomanNumerals("XL", "LVI", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "XCVI");

#test testAddLIIIPlusXXXEqualsLXXXIII
  size_t usedSumBufferSize = addRomanNumerals("LIII", "XXX", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "LXXXIII");

#test testAddXIVPlusXXXEqualsXXIV
  size_t usedSumBufferSize = addRomanNumerals("XIV", "XXX", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "XLIV");

#test testAddXPlusXEqualsXX
  size_t usedSumBufferSize = addRomanNumerals("X", "X", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "XX");

#test testAddIPlusXIIEqualsXIII
  size_t usedSumBufferSize = addRomanNumerals("I", "XII", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "XIII");

#test testAddIPlusXEqualsXI
  size_t usedSumBufferSize = addRomanNumerals("I", "X", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "XI");

#test testAddIPlusIXEqualsX
  size_t usedSumBufferSize = addRomanNumerals("I", "IX", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "X");

#test testAddVIIPlusIIEqualsIX
  size_t usedSumBufferSize = addRomanNumerals("VII", "II", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "IX");

#test testAddIIPlusVIEqualsVIII
  size_t usedSumBufferSize = addRomanNumerals("II", "VI", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "VIII");

#test testAddVPlusIIIEqualsIII
  size_t usedSumBufferSize = addRomanNumerals("III", "III", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "VI");

#test testAddIVPlusIEqualsV
  size_t usedSumBufferSize = addRomanNumerals("IV", "I", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "V");

#test testAddIIPlusIIEqualsIV
  size_t usedSumBufferSize = addRomanNumerals("II", "II", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "IV");

#test testAddIIPlusIEqualsIII
  size_t usedSumBufferSize = addRomanNumerals("II", "I", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "III");

#test testAddIPlusIIEqualsIII
  size_t usedSumBufferSize = addRomanNumerals("I", "II", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "III");

#test testAddIPlusIEqualsII
  size_t usedSumBufferSize = addRomanNumerals("I", "I", sumBuffer, SUMBUFFERLENGTH);
  ck_assert_str_eq(sumBuffer, "II");
